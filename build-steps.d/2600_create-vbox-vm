#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE${1+"$@"}"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source colors
source variables

root_check

general_setup() {
   errorhandlersetup "errorhandlergeneral" ERR INT TERM

   ## Create a new VM. Name: $VMNAME
   sudo -u "$user_name" VBoxManage createvm --name "$VMNAME" --register

   ## Debian
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --ostype Debian

   ## Add SAS Controller for hdd.
   ## Not using SATA for hdd:
   ## - https://github.com/Whonix/Whonix/issues/274
   ## - https://www.virtualbox.org/ticket/10031
   sudo -u "$user_name" VBoxManage storagectl "$VMNAME" --add sas --name "$VMNAME-sas"

   ## HDD gets added in specific_setup.

   ## Add SATA Controller for DVD.
   sudo -u "$user_name" VBoxManage storagectl "$VMNAME" --add sata --name "$VMNAME-sata"

   ## Only 4 sata ports instead of 30. Speeds up booting.
   sudo -u "$user_name" VBoxManage storagectl "$VMNAME" --name "$VMNAME-sata" --sataportcount 4

   ## Add DVD.
   sudo -u "$user_name" VBoxManage storageattach "$VMNAME" --storagectl "$VMNAME-sata" --type dvddrive --port 1 --medium emptydrive

   ## RAM
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --memory "$VMRAM"

   ## Enable PAE.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --pae on

   ## Hide hosts CPU info. This does not have a GUI option.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --synthcpu on

   ## REVIEW
   ## ACPI speeds up the VM boot process. It has not been reviewed if this is good or bad for security.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --acpi on

   ## REVIEW
   ## It has not been reviewed if this is good or bad for security.
   ##
   ## VirtualBox documentation can be found on:
   ## https://www.virtualbox.org/manual/ch03.html
   ##
   ## Quote VirtualBox documentation:
   ## "[...] Enabling the I/O APIC is required for 64-bit guest operating
   ## systems, especially Windows Vista; it is also required if you want to use
   ## more than one virtual CPU in a virtual machine. [...]"
   ## Conclusion: it is better to leave it enabled to avoid support requests by
   ## users who wish to use more than one virtual CPU, who install an amd64
   ## kernel or create their own Custom-Whonix-Workstation.
   ##
   ## Quote VirtualBox documentation:
   ## "[...] Advanced Configuration and Power Interface (ACPI) which VirtualBox
   ## presents to the guest operating system by default. ACPI is the current
   ## industry standard to allow operating systems to recognize hardware,
   ## configure motherboards and other devices and manage power. As all modern
   ## PCs contain this feature and Windows and Linux have been supporting it
   ## for years, it is also enabled by default in VirtualBox. [...]"
   ## Conclusion: The linux kernel is better tested with I/O APIC enabled
   ## rather than I/O APIC disabled.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --ioapic on

   ## Set system clock of VM to UTC.
   ## When VirtualBox starts it looks up date and time of the host, i.e. "JAN 15 2012 00:00:00"
   ## and sets the VM clock to that date and time. The following option translates the date
   ## and time to UTC, thus hiding the hosts timezone from the guest.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --rtcuseutc on

   ## Deactivate time synchronization between host and VMs.
   ## This is documented in Whonix Design on TimeSync page
   ## Thanks to
   ## http://www.braingia.org/webnotes/2011/06/22/disable-time-sync-with-virtualbox/
   sudo -u "$user_name" VBoxManage setextradata "$VMNAME" "VBoxInternal/Devices/VMMDev/0/Config/GetHostTimeDisabled" "1"

   ## Disable clipboard sharing. Only matters if guest additions are installed which is recommended against. Just in case.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --clipboard disabled

   ## Disable Drag'n'Drop support. Only matters if guest additions are installed which is recommended against. Just in case.
   ## TODO: Get ride of || true.
   ## || true to make this work on Debian Wheezy. We do not yet have the requirement to build on Debian Jessi.
   ## This VirtualBox feature was introduced first in the version which is also in Debian Jessi.
   true "INFO: Might fail (expected) if VirtualBox does not support this feature. See Whonix source code."
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --draganddrop disabled || true
   true "INFO: If it failed, it was expected. See Whonix source code."

   sync
}

whonix-gateway_specific() {
   errorhandlersetup "errorhandlergeneral" ERR INT TERM

   ## Attach the HDD.
   sudo -u "$user_name" VBoxManage storageattach "$VMNAME" --storagectl "$VMNAME-sas" --type hdd --port 0 --medium "$HOMEVAR/VirtualBox VMs/$VMNAME/$VMNAME.vdi"

   ## 8 MB Video RAM.
   ## Settings->Display->Video Memory->8 MB.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --vram "$VRAM"

   ## Leave Adapter 1 as NAT.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --nic1 nat

   ## Prevents leaking DNS info from the host into the guest.
   ## Also useful in other cases.
   ## https://www.virtualbox.org/manual/ch09.html#nat-adv-dns
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --natdnsproxy1 on

   ## Prevents leaking DNS info from the host into the guest.
   ## Also useful in other cases.
   ## https://www.virtualbox.org/manual/ch09.html#nat_host_resolver_proxy
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --natdnshostresolver1 on

   ## Do not pass the domain name for network name resolution to the VM.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --natdnspassdomain1 off

   ## Enable Adapter 2, set to "Internal Network".
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --nic2 intnet

   ## Change the internal network to "Whonix", IMPORTANT!
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --intnet2 "Whonix"

   sync
}

whonix-workstation_specific() {
   errorhandlersetup "errorhandlergeneral" ERR INT TERM

   ## Attach the HDD.
   sudo -u "$user_name" VBoxManage storageattach "$VMNAME" --storagectl "$VMNAME-sas" --type hdd --port 0 --medium "$HOMEVAR/VirtualBox VMs/$VMNAME/$VMNAME.vdi"

   ## 128 MB Video RAM.
   ## Settings->Display->Video Memory->128 MB.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --vram "$VRAM"

   ## Add Adapter 1 (will be eth0), an internal network, IMPORTANT!
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --nic1 intnet

   ## Probably a relict. Should work without as well. Needs testing, if its on by default anyway. Low priority.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --cableconnected1 on

   ## Change the internal network to "Whonix", IMPORTANT!
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --intnet1 "Whonix"

   ## Enable audio controller ac97.
   ## sb16 should be obsolete.
   ## ac97 is hopefully better supported than intel hda.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --audiocontroller ac97

   ## Host audio driver can be oss, alsa or pulse.
   ## Unfortunately, no auto detection available.
   ## Depends on host driver.
   ## Ubuntu host uses pulse audio.
   sudo -u "$user_name" VBoxManage modifyvm "$VMNAME" --audio pulse

   sync
}

whonix-custom-workstation_specific() {
   errorhandlersetup "errorhandlergeneral" ERR INT TERM

   VBoxManage setextradata "$VMNAME" "GUI/FirstRun" "yes"

   sync
}

if [ "$WHONIX_BUILD_VIRTUALBOX" = "true" ]; then
   true "${bold}${under}INFO: Currently running script: $BASH_SOURCE ${1+"$@"}${reset}"

   general_setup

   if [ "$WHONIX_BUILD_GATEWAY" = "1" ]; then
      whonix-gateway_specific
   elif [ "$WHONIX_BUILD_WORKSTATION" = "1" ]; then
      whonix-workstation_specific
   elif [ "$WHONIX_BUILD_CUSTOM_WORKSTATION" = "1" ]; then
      whonix-workstation_specific
      whonix-custom-workstation_specific
   else
      bug "ERROR: Neither WHONIX_BUILD_GATEWAY nor WHONIX_BUILD_WORKSTATION is set to 1. Please report this bug!"
   fi

   benchmarktimeend ## sets benchmark_took_time (implemented in help-steps/pre)
   true "${bold}${under}INFO: End of: $BASH_SOURCE ${1+"$@"} | $whonix_build_error_counter error(s) detected. (benchmark: $benchmark_took_time)${reset}"
else
   true "${green}INFO: Skipping $BASH_SOURCE, because WHONIX_BUILD_VIRTUALBOX is not set to 'true'.${reset}"
fi
